AMD     CMD JS编程规范
(function(){
    var Widget = function(){....};

    // AMD && CMD
    if(typeof define === 'function'){
        define(function(){
            return Widget;
        });
    // CommonJS
    }else if(typeof module !== "undefined" && module !== null){
        module.exports = Widget;
    // window
    }else{
        window.Widget = Widget;
    }
})();

1:
map 函数
["1","2","3"].map(parseInt);

2:
[typeof null, null instanceof Object]

type         result
Undefined   "undefined"
Null        "object"
Boolean     "boolean"
Number      "number"
String      "string"
Symbol      "symbol"
Host object Implementation-dependent
Function    "function"
Object      "object"

3:
reduce
Math.pow
[[3,2,1].reduce(Math.pow).[].reduce(Math.pow)]

4:
var val="smtg";
console.log('Value'+(val==="string") ? 'Something' :"Nothing");

5:
var name="World !";
(function(){
    if(typeof name ==="undefined"){
      var  name="Jack";
      console.log('Goodbye'+name);
    }else{
    console.log("Hello"+name);
    }
})();

6:
var END=Math.pow(2,53);
var START=END-100;
var count=0;
for(var i=START;i<=END;i++){
    count++;
}
console.log(count);

7:
var art=[0,1,2];
ary[10]=10;
arr.filter(function(x){return x===undefined;});


8:
var two=0.2
var one=0.1
var eight=0.8
var six=0.6

[two-one==one,eight-six==two]

9:
function showCase(value){
    switch(value){
    case "A":
        console.log("Case A");
        break;
    case "B":
        console.log("Case B");
        break;
    case undefined:
        console.log("undefined");
        break;
    default:
        console.log("Do not know!");

    }
}

showCase(new String("A"));

10:
function showCase2(value){
    switch(value){
        case "A":
            console.log('Case A');
            break;
        case "B":
            console.log("Case B");
            break;
        case undefined:
            console.log('undefined');
            break;
        default:
            console.log('Do not know !');
    }
}
showCase2(String("A"));


function isOdd(num){
    return num % 2==1;
}

function isEven(num){
    return num % 2==0;
}

function isSane(num){
    return isEven(num) || isOdd(num);
}

var values=[7,4,'13',-9,Infinity];
values.map(isSane);

12:
parseInt(3,8);
parseInt(3,2);
parseInt(3,0);

13:
Array.isArray(Array.prototype);

14:
var a=[0];
if([0]){
    console.log(a==true);
}else{
    console.log("wut");
}

15:
[] == []

16:
'5' +3
'5' -3

17:
1+-+++-+1

18:
var ary=Array(3);
ary[0]=2
ary.map(function(elem){return '1';});

19:
function sidEffecting(ary){
    ary[0]=ary[2];
}

function bar(a,b,c){
    c=10
    sidEffecting(arguments);
    return a+b+c;
}

bar(1,1,1);

20:
var a=111111111111111110000,
    b=1111;
    a+b;

21:
var x=[].reverse;
x();

22:
Number.MIN_VALUE>0

23:
[1<2<3,3<2<1]

24:
2==[[[2]]]

25:
3.toString();
3..toString();
3...toString();

26:
(function(){
    var x=y=1;
})();
console.log(y);
console.log(x);


27:
var a=/123/,
    b=/123/;
a==b
a===b


28:
var a=[1,2,3],
b=[1,2,3],
c=[1,2,4]
a==b
a===b
a>c
a<c

29:
var a={},b=Object.prototype;
[a.prototype===b,Object.getPrototypeOf(a)===b]

30:
function f(){}
var a=f.prototype,b=Object.getPrototypeOf(f);
a===b

31:
function foo(){}
var oldName=foo.name;
foo.name="bar";
[oldName,foo.name]

32:
"1 2 3".replace(/\d/g,paraseInt);

33:
function f(){};
var parent=Objcet.getPrototypeOf(f);
f.name
parent.name
typeof eval(f.name)
typeof eval(parent.name)

34:
var lowerCaseOnly=/^[a-z]+$/;
[lowerCaseOnly.test(null),lowerCaseOnly.test()]

35:
[,,,].join(",");

36:
var a={class:"Animal",name:"Fido"};
a.class

37:
var a=new Date("epoch");

38:
var a=Function.length,
    b=new Function().length
    a===b

39:
var a =Date();
var b=new Date(0);
var c=new Date();
[a===b,b===c,a===c]

40:
var min=Math.min(),max=Math.max();
min<max

41:
function captureOne(re,str){
    var match=re.exec(str);
    return match && match[1];
}

var numRe  = /num=(\d+)/ig,
    wordRe = /word=(\w+)/i,
    a1 = captureOne(numRe,  "num=1"),
    a2 = captureOne(wordRe, "word=1"),
    a3 = captureOne(numRe,  "NUM=2"),
    a4 = captureOne(wordRe,  "WORD=2");
[a1 === a2, a3 === a4]

42:
var a = new Date("2014-03-19"),
    b = new Date(2014, 03, 19);
[a.getDay() === b.getDay(), a.getMonth() === b.getMonth()]

43:
if ('http://giftwrapped.com/picture.jpg'.match('.gif')) {
  'a gif file'
} else {
  'not a gif file'
}


44:
function foo(a) {
    var a;
    return a;
}
function bar(a) {
    var a = 'bye';
    return a;
}
[foo('hello'), bar('hello')]


















