本笔记是阅读<<编写高质量代码--Web前端开发修炼之道>> 一书所做的笔记

1:Web标准--结构,样式,和行为的分离
2:网站的维护工作越来越难主要三个方面 浏览器层面 技术层面 团队合作层面
3:打造高质量的前端代码,提高代码的可维护性-- 精简  重用  有序
所谓高质量的代码,在Web标准的思想指导下,子啊实现结构,样式,和行为分离的基础上,还要做到三点:精简 重用 有序
4:增加代码可读性 --注释
5:提高重用性  公用组件和私有组件的维护
6:冗余和精简的矛盾  选择集中还是选择分散 按需加载还是一次性全部加载
7:磨刀不误砍柴工  --前期构思很重要

高质量的HTML
1:标签的语义: HTML标签的设计都是有语义考虑的如下表
标签名 			英文全拼      	     	中文翻译
div				division				分隔
span			span					范围
ol 				ordered list      		排序列表
ul				unordered list     		不排序列表
list			list item  				列表项目
dl				definition list   		定义列表
dt 				definition term			定义术语
dd 				definition description 	定义描述		
del 			deleted					删除
ins 			inserted				插入
h1~h6 			header1 to header 6		标题1到标题6
p 				paragraph				段落
hr 				horizontal rule			水平尺
a 				anchor					锚
abbr 			abbreviation			缩写词
acronym 		acronym					取首字母的缩写词
address 		address					地址
var 			variable				变量
pre 			preformatted			预定义格式
blockquote  	block quotation			区块引用语
strong  		strong					加重
em 				emphasized				加重
b 				bold					粗体
i 				italic					斜体
big 			big						变大
small 			small					变小
sup 			superscripted			上标
sub 			subscripted				下标
br 				break					换行
center 			center					居中
font 			font					字体
u 				underlined				下划线
s 				Strikethrough			删除线
fieldest 		fieldest				域集
legend 			legend					图标
caption 		caption 				标题

2:设计页面先确定HTML 确定语义的标签,再来选用合适的CSS


高质量的CSS
1:标准模式是浏览器按最新标准最高的标准来解析 兼容模式(怪异模式) 是浏览器向后兼容,模拟老式浏览器的行为
2:触发兼容模式是有DTD 即Document Type Definition 文档类型定义
以下是网页中常见的四种DTD类型
 
 用于HTML4.01 的严格模式
 <!DOCTYPE HTML PUBLIC "_//W3C//DTD HTML 4.01//EN" "http://www.w3.org/ TR/html4/strict.dtd">

用于HTML4.01 的过渡型
<!DOCTYPE HTML PUBLIC "_//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">

用于XHTML 1.0的过渡型
<!DOCTYPE html PUBLIC "_//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml/DTD/xhtml1-transitional.dtd">

用于XHTML 1.0 的严格型
<!DOCTYPE html PUBLIC "_//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml/DTD/xhtml/DTD/xhtml-strict.dtd">

3:模块化CSS 在CSS中引入面向对象编程思想
如何划分模块 单一职责  

拆分模块的技巧一: 模块与模块之间尽量不要包含相同的部分,如果有相同的部分,应将他们提取出来,拆分成一个独立的模块
拆分模块的技巧二:模块应在保证数据尽可能少的原则下,做到尽可能简单,以提高重用性.

4:css的命名 驼峰命名法用于区别不同单词,划线用于表明从属关系

5:多用组合 少用继承

6:低权重原则 避免滥用子选择器 :当不同选择符的样式设置有冲突时,会采用权重高的选择符设置的样式
HTML的标签的权重是1,class的权重是10,id的权重是100. 如果CSS的选择符权重相同,那么样式会遵循就近原则,哪个先择符最后定义 就采用哪个选择的样式

7:CSS sprite
将多张图片合并为一张,然后利用background-position 属性来展示我们需要的部分 CSS sprite (雪碧) 减少HTTP请求 减轻服务器压力  但它却需要付出降低开发工作效率 和增加维护难度的代价

8:CSS hack
(1):IE 条件注释法

只在IE下生效
<!--[if IE]>
<link rel="stylesheet" href="test.css"/>
<![endif]-->

只在IE6下生效
<!--[if IE 6]>
<link rel="stylesheet" href="test.css"/>
<![endif]-->

只在IE6以上版本生效
<!--[if gt IE 6]>
<link rel="stylesheet" href="test.css"/>
<![ENDIF]-->

只在IE7上不生效
<!--[if ! IE 7]>
<link rel="stylesheet" href="test.css"/>
<![endif]-->

(2):选择符前缀法  在CSS 选择符前加一些只有特定浏览器才能识别的前缀,从而让某些样式只对特定浏览器生效
例如:"*html" 前缀只对IE6 生效 , "*+html" 前缀只对IE7 生效

(3):样式属性前缀法 在样式的属性名前加前缀,这些前缀只在特定的浏览器下才能生效
如:"_" 只在IE6 下生效 "*" 在IE6  和IE7 下生效

9:解决超链接访问后hover 样式不出现的问题
这是因为a:visited 和a:hover 的顺序放错了
关于a标签的四种状态的排序问题 
link visited hover active

10:块级元素和行内元素的区别
常见的块级元素有div p form ul ol li
常见的行内元素有span strong em
块级元素会独占一行 ,默认情况下,其宽度自动填满其父级元素的宽度,行内元素不会独占一行.相邻的行内元素会排列在同一行里直到排不下,块级元素可以设置width height 但行内元素设置width 和height无效

11:relative,absolute 和float
position:relative和position:absolute 都可以改变子啊文档流的位置,设置其中一个都可以让元素激活left top
right bottom和z-index 属性

12:居中
水平居中:(1) 文本图片等行内元素的水平居中 给父元素设置text-align:center 
		 (2) 确定宽度的块级元素水平居中  设置margin-left:auto 和 margin-right : auto

竖直居中:(1)父元素高度不确定的文本,图片,块级元素的竖直居中, 通过给父容器设置相同的上下边距实现
		 (2)父元素高度确定的单行文本竖直居中,通过设置line-height 来实现 line-height 和父元素的高度值相同即可
		 (3)父元素高度确定的多行文本 图片 块级元素竖直居中 一是通过vertical-align:middle 二是通过display:table-cell
