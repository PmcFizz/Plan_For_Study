从数组中随机获取成员
var items=[12,548,23,"2","foo",9982,"Doe"];
var randomItem=items[Math.floor(Math.random()*items.length)];

获取指定范围内的随机数
var x=Math.floor(Math.random()*(max-min+1))+min;

生成从0到指定值的数字数组
var numberArray=[],max=100;
for(var i=1;numberArray.push(i++)<max;);

生成随机的字母数字字符串
function generateRandomAlphaNum(len){
	var rdmString="";
	for(;rdmString.length<len;rdmString+=Math.random().toString(36).substr(2));
	return rdmString.substr(0,len);
}


打乱数字数组的顺序
var numbers=[5,232,234,-423,3,534,12];
numbers=numbers.sort(function(){return Math.random()-0.5});


 大型页面的JavaScript设计

 +1:函数树不够清晰
 +2:使用大量匿名函数
 +3:功能的实现代码摆放顺序混乱
 +4:没有做很好的模块封装
 +5:对重要变量保护不够

 编程里的写作技巧

 循序渐进 迭代 


健壮的程序具有以下特点

稳定
可读性
快速
易扩展
安全
可调试


 模块模式
 对内私有 对外选择暴露
 控制权的转移应以模块独立的原则设计
 插件不易业务为转移
 回调函数(预留函数) 对于插件或功能的扩展有很多帮助 
 对焦点的控制 对按键的支持 可以提高操作效率
