1:居中  #main { width: 600px; margin: 0 auto; }

2:一个block元素通常被叫做块级元素 .一个inline 元素通常被叫做行内元素

3:使用max-width 代替 width

4:.simple { width: 500px; margin: 20px auto;}
.fancy {  width: 500px;  margin: 20px auto;  padding: 50px;  border-width: 10px;}
因为元素的边框和内边距会撑开元素 导致 两个相同宽度的元素显示的实际宽度却不一样。 
当你设置了元素box-sizing :border-box时 此元素的内边距和边框不会增加他的宽度

5:* {  -webkit-box-sizing: border-box; -moz-box-sizing: border-box;box-sizing: border-box;}
设置所有元素都不加元素的内边距和边框

6:position:relative 时 可以使用top left bottom right. fixed 是一个固定定位 相对于窗口,页面滚动 还会停留在相同的位置 .fixed {  position: fixed;  bottom: 0;  right: 0;  width: 200px;  background-color: white;}


7.relative {  position: relative;  width: 600px;  height: 400px;}
.absolute {  position: absolute;  top: 120px;  right: 0;  width: 300px;  height: 200px;}
absolute 相对最近的positioned 祖先元素定位  如果没有则相对body

8:使用 Flexbox 的牛逼布局
121
.container {
  display: -webkit-flex;
  display: flex;
}
.initial {
  -webkit-flex: initial;
          flex: initial;
  width: 200px;
  min-width: 100px;
}
.none {
  -webkit-flex: none;
          flex: none;
  width: 200px;
}
.flex1 {
  -webkit-flex: 1;
          flex: 1;
}
.flex2 {
  -webkit-flex: 2;
          flex: 2;
}
9:使用 Flexbox 的居中布局
vertical-container {
  height: 300px;
  display: -webkit-flex;
  display:         flex;
  -webkit-align-items: center;
          align-items: center;
  -webkit-justify-content: center;
          justify-content: center;
}